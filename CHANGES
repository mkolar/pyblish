pyblish Changelog
=================

This contains all major version changes between pyblish releases.

Version 1.3.1
-------------

- Enhancement: pyblish.api.deregister_callback now throws an error on missing callback

Version 1.3.0
-------------

- Explicit plug-ins (#242)
- Simplified CLI
- CLI --data now handles inproperly formatted data (by treating it as strings)
- DEPRECATED: Services
- DEPRECATED: pyblish.logic.process
- BACKWARD INCOMPATIBLE: Vendored packages nose, yaml and coverage no longer included
- BACKWARD INCOMPATIBLE: CLI side-car configuration files no longer picked up.
- BACKWARD INCOMPATIBLE: CLI side-car data files no longer picked up.

Version 1.2.3
-------------

- Callbacks (#238)
- Iterator (#239)

Version 1.2.2
-------------

- Added icons for integrations under /icons
- Added support for instances with multiple families (#231)

Version 1.2.1
-------------

- Feature: Actions (see #142)
- Enhancement: All instances are now given a default family, where none is provided, called "default".
- Enhancement: Added deprecation warnings; quiet by default, run Python with -Wdefault to see them.
- Enhancement: In favour of maintainability, the dict-like property of Context was simplified; no behavioural difference.
- Enhancement: Multiple instances of the same name now officially supported.
- DEPRECATED: Context/Instance `.data` is now a pure dictionary.
- DEPRECATED: Context/Instance `.add` and `.remove`

Version 1.2.0
-------------

- BACKWARD INCOMPATIBLE: Directly registered plug-ins are now also checked for duplicates; before, they overwrite those discovered on disk.
- BACKWARD INCOMPATIBLE: `register_plugin` now checks the proposed registered plug-in for correctness, and throws an exception otherwise.
- BACKWARD INCOMPATIBLE: `regex` has been deprecated from `discover()` and does nothing. 
- BACKWARD INCOMPATIBLE: `type` has been deprecated from `discover()` and does nothing.
- Enhancement: Implementation of discover() has been greatly simplified, made more robust and reusable.

Version 1.1.6
-------------

- Bugfix: Duplicate instances was allowed (#219)
- Added pyblish.plugin.plugins_from_module

Version 1.1.5
-------------

- Bugfix: Deprecated function pyblish.api.current_host fixed (#215)

Version 1.1.4
-------------

- Feature: Added support for `"MyInstance" in context`
- Enhancement: Removing the need for @pyblish.api.log (#213)
- Bugfix: Negative collectors (#210)

Version 1.1.3
-------------

- Bugfix: Decrementing order actually works now. (#206)
- Feature: Dict-like getting of instances from Context (#208)
- Feature: Host registration (#177)
- `collect` and `integrate` now available via pyblish.util
- "asset" available in context.data("result") for forwards compatibility

Version 1.1.2
-------------

- Logic: Excluding SimplePlugin and Selectors from Default test (See #198)
- BACKWARDS INCOMPATIBLE order now supports being decremented (see #199)

Version 1.1.1
-------------

- Enhancement: Hosts limit, not allow (see #194)
- Enhancement: CLI outputs less, more concise information
- Enhancement: Lowering logging level for plug-ins skipped during discovery to DEBUG
- Enhancement: Underscore-prefixed plug-ins are hidden from discovery (see #196)
- Bugfix: Discover ignores non-Python files (see #192)

Version 1.1.0
-------------

- Feature: Dependency Injection (see #127)
- Feature: SimplePlugin (see #186)
- Feature: In-memory plug-ins (see #140)
- Feature: Custom test (see #183)
- Feature: create_instance(name, **kwargs) (see #187)
- Preview: Asset (see #188)
- Enhancement: Logic unified between pyblish.util and pyblish.cli
- Bugfix: Order now works with pyblish.util and pyblish.cli (see #178)
- Standardised time format (see #181)
- pyblish.util minified. For data visualisation, refer to pyblish-qml
- Bugfix: True singleton configuration (see #182)
- Added pyblish.lib.ItemList
- API: Added Plugin.label
- API: Added Plugin.active
- API: Added pyblish.api.register_test()
- API: Added pyblish.api.deregister_test()
- API: Added pyblish.api.registered_test()
- API: Added pyblish.api.plugins_by_instance()
- API: New defaults for `hosts` and `families` of plug-ins. (see #176)
- API: Added pyblish.api.register_plugin()
- API: Added pyblish.api.deregister_plugin()
- API: Added pyblish.api.registered_plugins()
- API: Added pyblish.api.deregister_all_plugins()
- API: Added pyblish.api.register_service()
- API: Added pyblish.api.deregister_service()
- API: Added pyblish.api.registered_services()
- API: Added pyblish.api.deregister_all_services()
- API: Renamed pyblish.api.sort() to pyblish.api.sort_plugins(), original deprecated
- API: Renamed pyblish.api.deregister_all -> deregister_all_paths, original deprecated
- BACKWARD INCOMPATIBLE You can no longer use both process_instance and process_context in the same plug-in; process_instance takes precedence.
- BACKWARD INCOMPATIBLE Removed Extractor.compute_commit_dir
- BACKWARD INCOMPATIBLE Removed Extractor.commit
- BACKWARD INCOMPATIBLE Removed validate_naming_convention plug-in
- Known issue: pyblish.logic.process.next_plugin yields wrong result

Version 1.0.16
--------------

- Feature: The Pyblish CLI is back!
- API: Added pyblish.api.sort()
- API: Added pyblish.api.current_host()
- API: Plug-in paths can no longer be modified by altering
    the results returned from pyblish.api.plugin_paths()
- API: Paths are no longer made absolute during registration.

Version 1.0.15
--------------

- API: Plugin.repair_* documented and implemented by default
- API: Added lib.where()
- API: Added `.id` attribute to instances and plug-ins

Version 1.0.14
--------------

- Added pyblish.api.version
- Matched verbosity level from processing context as the processing of instances.
- Processing logic change; processing of plug-in *without* compatible instances will now *not* yield anything; previously it yielded a pair of (None, None).

Version 1.0.13
--------------

- Added pyblish.api.sort_plugins
- Added ordered output to pyblish.api.discover
- pyblish.api.plugins_by_family now yields correct results
    for plug-ins with wildcard families.
- Refactored main.py into util.py

Version 1.0.12
--------------

- plugin.py reloadable without loosing currently loaded plug-ins
- Basic plug-in manager "Manager"
- Simplified configuration (no more user or custom configuration)
- Simplifying discover() (no more indirection)
- Adding default logger (good bye "No logger found..")
- Temporarily removig CLI
- Context is no longer a Singleton
- Added forwards compatibility for Collector plug-in

Version 1.0.11
--------------

- Added ability to process individual instances from within context

Version 1.0.10
--------------

- Fixing PyPI installation

Version 1.0.9
-------------

- Requires. Plug-ins may now specify a version with which they
    are compatible with, using [iscompatible][] which is a
    requirements.txt-like syntax for dependency specifications.
- Improved logging, including visualisation of which instance
    is currently being processed by each plug-in.
- iscompatible is now included in /vendor

[iscompatible]: https://github.com/mottosso/iscompatible


Version 1.0.8
-------------

- Nice name for Plug-ins. A plug-in can now carry an
	optional `name` attribute that will replace the
	default class-name used when visualising a plug-in
	name.
- Configurable configuration location. Users can now specify
    where Pyblish will look for configuration files, via the
    PYBLISHCONFIGPATH variable.
- Registered path no longer have to exist. To align better with
    paths added via environment variables or configuration, the
    registration of paths is now okay even though the path may
    not exist. A non-existing path will simply be discarded upon
    discovery (and log a warning message).
- Auto-repair. pyblish.main.publish() now takes a auto_repair flag
    with which the Plugin.repair_instance method is called. If a
    repair fails, a message is logged, otherwise the validation is
    considered a success and publishing resumes.
- Plug-ins for other hosts than the currently running host are
    discarded upon discovery. This means that they will be invisible
    to any incompatible host.
- Optional plug-ins. A plug-in may now be marked "optional" and thus
    be ignored during processing by user-request using
    pyblish.main.publish(include_optional=False)

Version 1.0.7
-------------

- Improved logging of pyblish.main.publish()
- Refactored backend/frontend; frontends now in their own
	individual repositories.
- Added landscape.io code-quality badge

Version 1.0.6
-------------

- New API members: plugins_by_family, plugins_by_host and 
	instances_by_plugin
- Improved print of Context and Instance
 	Context now prints members, like a regular list
 	and Instance prints its name and class relation.
- Implemented Context.delete() to simplify working with a Singleton.

Version 1.0.5
-------------

- Redefined and simplified configuration
- Moving API from root package to namespace "api"
- Initial version of command-line interface (cli)
- Initial version of package-control using cli